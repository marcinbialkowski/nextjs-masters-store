generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_DIRECT_URL")
}

model Product {
  id          String @id @default(cuid())
  slug        String @unique
  name        String
  description String
  price       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  images      Image[]
  categories  Category[]
  collections Collection[]
  orderItems  OrderItem[]
  reviews     Review[]
}

model Image {
  id       String @id @default(cuid())
  url      String
  alt      String
  width    Int
  height   Int
  products Product[]
}

model Category {
  id          String @id @default(cuid())
  slug        String @unique
  name        String
  description String
  products    Product[]
}

model Collection {
  id          String @id @default(cuid())
  slug        String @unique
  name        String
  description String
  products    Product[]
}

model Order {
  id        String @id @default(cuid())
  status    OrderStatus @default(CREATED)
  items     OrderItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OrderItem {
  id        String @id @default(cuid())
  quantity  Int
  product   Product @relation(fields: [productId], references: [id])
  productId String
  order     Order @relation(fields: [orderId], references: [id])
  orderId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([productId, orderId])
}

enum OrderStatus {
  AWAITING_PAYMENT
  CANCELLED
  CREATED
  PAID
}

model Review {
  id        String @id @default(cuid())
  product   Product @relation(fields: [productId], references: [id])
  productId String
  author    String
  email     String
  title     String
  content   String
  rating    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
